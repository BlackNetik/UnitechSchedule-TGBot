# Unitech Schedule Bot

![Python](https://img.shields.io/badge/Python-3.8%2B-blue)
![Telegram](https://img.shields.io/badge/Telegram-Bot-brightgreen)
![Version](https://img.shields.io/badge/Version-1.41-orange)

Это Telegram-бот, который предоставляет расписание занятий для студентов Технологического Университета им. А.А. Леонова на основе данных с портала Unitech (es.unitech-mo.ru). Бот скачивает и парсит ICS-файлы расписания, поддерживает смену группы, отправку обратной связи и удобный интерфейс с кнопками.

Бот написан с помощью AI Grok и предназначен для использования в личных чатах или группах. По умолчанию отображает расписание для группы ПИ-23.

## Возможности
- Просмотр расписания на сегодня, завтра, неделю, следующую неделю или конкретный день.
- Смена группы по названию (например, /change ПИ-23).
- Отправка обратной связи разработчику.
- Логирование действий в файлах (директория Logs).
- Хранение пользовательских настроек в users.json.
- Обработка ошибок, включая таймауты и недоступность сервера Unitech.

## Требования
- Python 3.8 или выше.
- Зависимости (установите через pip):
  ```
  pip install python-telegram-bot requests icalendar
  ```
- Telegram API токен (получите у @BotFather).

## Установка
1. Клонируйте репозиторий:
   ```
   git clone https://github.com/yourusername/unitech-schedule-bot.git
   cd unitech-schedule-bot
   ```
2. Создайте файл `api_key_journal_unitech.txt` в корне проекта и вставьте в него ваш Telegram API токен (одна строка, без кавычек).
3. Установите зависимости (см. выше).
4. Запустите бота:
   ```
   python rasp_unitech.py
   ```

Бот автоматически создаст необходимые файлы: `users.json` для хранения данных пользователей и директорию `Logs` для логов.

## Использование
- Найдите бота в Telegram по его username (укажите при создании в @BotFather).
- Запустите /start для приветствия и меню.
- Используйте кнопки или команды для навигации.

### Доступные команды
- `/start` — Запуск бота и отображение меню.
- `/info` — Информация о боте, версии и командах.
- `/change <название группы>` — Смена группы (например, `/change ПИ-23`). Бот найдет ID студента по группе.
- `/today` — Расписание на сегодня.
- `/tomorrow` — Расписание на завтра.
- `/week` — Расписание на текущую неделю.
- `/next_week` — Расписание на следующую неделю.
- `/day <номер дня>` — Расписание на указанный день текущего месяца (например, `/day 15`).
- `/feedback` — Отправка обратной связи (введите текст после команды).

### Пример работы
После /start бот покажет меню с кнопками. Нажатие на "Расп. на сегодня" выведет форматированное расписание с временем, типом занятия (лекция, практика и т.д.), аудиторией и описанием.

Если сервер Unitech недоступен (ошибка 504 или таймаут), бот сообщит об этом и предложит попробовать позже.

## Архитектура (простыми словами)
- **rasp_unitech.py**: Главный файл — запускает приложение, регистрирует хендлеры.
- **handlers.py**: Обработчики команд и колбэков (start, info, change, feedback и т.д.).
- **schedule.py**: Логика скачивания ICS, парсинга и форматирования расписания.
- **keyboards.py**: Генерация клавиатур (меню, выбор дня).
- **utils.py**: Утилиты — загрузка API-ключа, пользователей, логирование.
- **logging_setup.py**: Настройка логирования с ротацией файлов.
- **config.py**: Константы (версия, пути файлов).
- **get_student_id.py**: Функции для получения ID группы и студента по названию.

Бот использует ConversationHandler для многошаговых взаимодействий (feedback, выбор дня). Все асинхронно на базе python-telegram-bot.

## Логирование
Логи хранятся в `Logs/log-YYYY-MM-DD` (ротация ежедневно, хранение 30 дней). Формат: timestamp - User ID (username) in chat ID: message.

## Обновления
- Версия 1.41 от 19.09.2025: Добавлена обработка ошибок 504, улучшено форматирование расписания.

## Вклад
Если хотите внести изменения, создайте pull request. Для багов или идей используйте Issues.

## Лицензия
MIT License. Свободно используйте и модифицируйте.

## Контакты
Разработчик: Ратников В.Н.. Обратная связь через /feedback в боте или GitHub Issues.
